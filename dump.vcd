$date
	Tue Jun 25 19:25:03 2024
$end

$version
	Synopsys VCS version V-2023.12-SP1-1_Full64
$end

$timescale
	100us
$end

$comment Csum: 1 f82d253b83f85bfb $end


$scope module $unit $end
$upscope $end


$scope module writeToReg_tb $end
$var reg 32 ! tb_memload [31:0] $end
$var reg 32 " tb_pc [31:0] $end
$var reg 32 # tb_aluOut [31:0] $end
$var reg 32 $ tb_imm [31:0] $end
$var reg 32 % tb_writeData [31:0] $end
$var reg 1 & tb_negative $end
$var reg 1 ' tb_checking_outputs $end
$var reg 6 ( tb_cuOP [5:0] $end
$var integer 32 ) tb_test_num $end
$var integer 32 * tb_intermResult $end
$var reg 1 + tb_clk $end

$scope task checkOut $end
$var reg 32 , exp_out [31:0] $end
$upscope $end


$scope module DUT $end
$var reg 32 - memload [31:0] $end
$var reg 32 . pc [31:0] $end
$var reg 32 / aluOut [31:0] $end
$var reg 32 0 imm [31:0] $end
$var reg 1 1 negative $end
$var reg 6 2 cuOP [5:0] $end
$var reg 32 3 writeData [31:0] $end
$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
01
x'
0+
0&
b00000000000000000000000000000000 /
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ,
b000000 2
b00000000000000000000000000000000 0
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 #
b000000 (
b00000000000000000000000000000000 $
b00000000000000000000000000000000 *
b00000000000000000000000000000000 !
b00000000000000000000000000000000 "
b11111111111111111111111111111111 )
b00000000000000000000000000000000 %
b00000000000000000000000000000000 3
$end
#20
b00000000000000000000000000000000 )
b10101010101010101010101010101010 !
b10101010101010101010101010101010 -
b10111011101110111011101110111011 "
b10111011101110111011101110111011 .
b001010 (
b001010 2
b11111111111111111111111110101010 3
b11111111111111111111111110101010 %
#40
b11111111111111111111111110101010 ,
1'
#50
1+
#70
0'
#100
0+
#120
b00000000000000000000000000000001 )
b10111011101110111011101010111010 !
b10111011101110111011101010111010 -
b001011 (
b001011 2
b11111111111111111011101010111010 3
b11111111111111111011101010111010 %
#140
b11111111111111111011101010111010 ,
1'
#150
1+
#170
0'
#200
0+
#220
b00000000000000000000000000000010 )
b10101011101010111010101110101011 !
b10101011101010111010101110101011 -
b001100 (
b001100 2
b10101011101010111010101110101011 3
b10101011101010111010101110101011 %
#240
b10101011101010111010101110101011 ,
1'
#250
1+
#270
0'
#300
0+
#320
b00000000000000000000000000000011 )
b10101010101010101010101010101010 !
b10101010101010101010101010101010 -
b001101 (
b001101 2
b00000000000000000000000010101010 3
b00000000000000000000000010101010 %
#340
b00000000000000000000000010101010 ,
1'
#350
1+
#370
0'
#400
0+
#420
b00000000000000000000000000000100 )
b10111011101110111011101110111011 !
b10111011101110111011101110111011 -
b001110 (
b001110 2
b00000000000000001011101110111011 3
b00000000000000001011101110111011 %
#440
b00000000000000001011101110111011 ,
1'
#450
1+
#470
0'
#500
0+
#520
b00000000000000000000000000000101 )
b00000000000000000000000000001010 $
b00000000000000000000000000001010 0
b000001 (
b000001 2
b10111011101110111011101110111011 3
b10111011101110111011101110111011 %
#540
b10111011101110111011101110111011 ,
1'
#550
1+
#570
0'
#600
0+
#620
b00000000000000000000000000000110 )
b000000 (
b000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 %
#640
b00000000000000000000000000000000 ,
1'
#650
1+
#670
0'
#700
0+
#720
b00000000000000000000000000000111 )
b000010 (
b000010 2
b10111011101110111011101110111111 3
b10111011101110111011101110111111 %
#740
b10111011101110111011101110111111 ,
1'
#750
1+
#770
0'
#800
0+
#820
b00000000000000000000000000001000 )
b000011 (
b000011 2
#840
1'
#850
1+
#870
0'
#900
0+
#920
b00000000000000000000000000001001 )
b011100 (
b011100 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 %
#940
b00000000000000000000000000000000 ,
1'
#950
1+
#970
0'
#1000
0+
#1020
b100001 (
b100001 2
#1040
1'
#1050
1+
#1070
0'
#1100
0+
#1120
b001111 (
b001111 2
#1140
1'
#1150
1+
#1170
0'
#1200
0+
